#!/usr/bin/perl


use strict;
use warnings;

use XML::Simple;
use File::Copy;


# TODO: add color entry for players and default colors
# TODO: add more of those
my @colors = ( 'pink', 'lightblue', 'yellow' );

my $game_name = shift || "game";
my $game_dir = "./$game_name";

print "creating game directories $game_dir.. ";

mkdir $game_dir or die "couldn't create directory $game_dir: $!\n";
mkdir "$game_dir/history" or die "couldn't create directory $game_dir/history:$!\n";
# TODO: change mobil to mobil_station
mkdir "$game_dir/mobil" or die "couldn't create directory $game_dir/mobil:$!\n";

my ( $location ) = grep -d "$_/Games/PerlWar/web", @INC or die "no installation of PerlWar found\n";

print "found PerlWar at $location\n";

$location = "$location/Games/PerlWar/web";

copy( "$location/htaccess", "$game_dir/.htaccess" ) or die "coudn't copy .htaccess: $!\n";
for( qw/ submit.epl perlwar.ico upload.epl / )
{
	copy( "$location/$_", "$game_dir/$_" ) or die "coudn't copy $_: $!\n";
}
for( qw/ include_config.xps  iteration2html.xps / )
{
	copy( "$location/stylesheets/$_", "$game_dir/$_" ) or die "coudn't copy $_: $!\n";	
}


print "\n\ngame configuration\n";
my %conf;

$conf{gameStatus} = 'ongoing';

my $input;
print "game title [$game_name]: ";
chomp( $input = <> );

$conf{title}{content} = $input || $game_name;

print "Size of the Array [100]: ";
chomp( $input = <> );
$conf{theArraySize} = $input || 100;

print "game length (0 = open-ended game) [100]: ";
chomp( $input = <> );
$conf{gameLength} = length($input) ? $input : 100;

$conf{currentIteration} = 0;

print "snippet max. length [100]: ";
chomp( $input = <> );
$conf{snippetMaxLength}{content} = $input || 100;

print "mambo game (0=no, any positive integer is taken as the decrement)[0]: ";
chomp( $input = <> );
$conf{mamboDecrement}{content} = $input;

my @players;
$conf{player} = \@players;

while(1)
{
	print "enter a player (name password [color]), or nothing if done: ";
	my( $name, $password, $color ) = split ' ', <> or last;
	$color ||= shift @colors;
		
	push @players, { name => $name, password => $password, color => $color };
}

print "notes (empty line to terminate):\n";
$conf{note}{content} .= $_ while ($_ = <>) ne "\n";

print "saving configuration..\n";

XMLout( \%conf, OutputFile => "$game_dir/configuration.xml", RootName => 'configuration' );

print "creating round 0.. \n";

for my $filename ( qw/ round_current.xml round_00000.xml / )
{
	my $fh;
	open $fh, ">$game_dir/$filename" or die "can't create file $game_dir/$filename: $!\n";
	print $fh "<round id='0'><theArray>\n";
	print $fh "<slot id='$_'><owner></owner><code></code></slot>\n" for 0..$conf{theArraySize}-1;
	print $fh "</theArray><log/></round>";
	close $fh;
}

print "\ngame $game_name created\n";

exit;
